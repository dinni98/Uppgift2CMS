@inherits Umbraco.Web.Mvc.UmbracoViewPage<Uppgift2.Core.ViewModel.RegisterViewModel>
@using Uppgift2.Core.Controllers
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
@if ((string)TempData["status"] == "OK")
{
    <text>
        <div class="container">
            <div class="row">
                <div class="col text-center p-5">
                    <i class="far fa-5x fa-thumbs-up"></i>
                    <div>
                        Thanks for your registration, check your email to verify your account.
                    </div>
                </div>
            </div>
        </div>
    </text>
}
else
{
<div class="container">
    <div class="row">
        <div class="col">
            @Html.ValidationSummary()
            @using (Html.BeginUmbracoForm<RegisterController>("HandleRegister"))
            {
                <h2 class="h3">Fill in the details below to register.</h2>

                @Html.AntiForgeryToken();

                <div class="form-group">
                    @Html.LabelFor(m => m.FirstName)
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(m => m.FirstName)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.LastName)
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.EmailAddress)
                    @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(m => m.EmailAddress)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Username)
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(m => m.Username)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Password)
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @type = "password", @autocomplete = "off" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword)
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @type = "password", @autocomplete = "off" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword)
                </div>

                <button type="submit" value="Register" name="register-button">Register</button>
            }
        </div>
    </div>
</div>
}


